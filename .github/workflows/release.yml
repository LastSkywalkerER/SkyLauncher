name: Build and Release Electron App

on:
  push:
    branches:
      - main  # Запуск при каждом пуше в ветку main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Чтение версии Node.js из файла .nvmrc и удаление 'v' в начале
      - name: Use Node.js version from .nvmrc
        id: nvmrc_version
        run: |
          NODE_VERSION=$(cat .nvmrc | sed 's/^v//')  # Удаление 'v' из начала строки
          echo "Using Node.js version $NODE_VERSION"
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV  # Сохранение переменной в окружении

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}  # Использование версии из .nvmrc без 'v'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      # Установка Wine на macOS для сборки Windows .exe
      - name: Install Wine on macOS
        run: brew install --cask wine-stable

      - name: Build the app for macOS
        run: yarn build:mac

      - name: Build the app for Windows
        run: yarn build:win

      - name: Upload macOS build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-dist
          path: dist/*.dmg

      - name: Upload Windows build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-dist
          path: dist/*.exe

  release:
    needs: build
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download macOS build artifacts
        uses: actions/download-artifact@v3
        with:
          name: macos-dist
          path: dist/macos

      - name: Download Windows build artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-dist
          path: dist/windows

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
          files: |
            dist/macos/*.dmg
            dist/windows/*.exe
